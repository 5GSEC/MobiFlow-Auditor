import subprocess
import xml.etree.ElementTree as ET

def encode_decode_structure(operation, structure_name, binary_payload):
    # Call the C program with the specified operation, structure name, and binary payload
    result = subprocess.run(["./wrapper", operation, structure_name, binary_payload], capture_output=True, text=True)

    # Return the result
    return result.stdout.strip()


def element_to_dict(element):
    # Initialize the dictionary to store the element's tag, text, and children
    result = {
        element.tag: element.text.strip() if element.text is not None and element.text.strip() != "" else [element_to_dict(child) for child in element],
    }

    return result

# Example usage
if __name__ == "__main__":
    operation = "decode"

    structure_name = "E2SM_KPMv2_ActionDefinition"
    hex_payload = "000600000131001D003055452E524E5449003855452E494D534931003855452E494D534932002855452E524154004055452E4D5F544D5349006055452E4349504845525F414C47007855452E494E544547524954595F414C47005855452E454D4D5F4341555345007855452E52454C454153455F54494D4552008855452E45535441424C4953485F434155534500186D73673100186D73673200186D73673300186D73673400186D73673500186D73673600186D73673700186D73673800186D73673900206D7367313000206D7367313100206D7367313200206D7367313300206D7367313400206D7367313500206D7367313600206D7367313700206D7367313800206D7367313900206D736732304003E70000"

    structure_name = "E2SM_KPMv2_RANfunction_Description"
    hex_payload

    structure_name = "E2AP_PDU"
    hex_payload = "000540818c000007001d000500007b0011000500020001000f000100001b00020000001c0001000019000f0e0165ef66b90002f899300000e000001a00815281500600004003e7001d003055452e524e5449003855452e494d534931003855452e494d534932002855452e524154004055452e4d5f544d5349006055452e4349504845525f414c47007855452e494e544547524954595f414c47005855452e454d4d5f4341555345007855452e52454c454153455f54494d4552008855452e45535441424c4953485f434155534500186d73673100186d73673200186d73673300186d73673400186d73673500186d73673600186d73673700186d73673800186d73673900206d7367313000206d7367313100206d7367313200206d7367313300206d7367313400206d7367313500206d7367313600206d7367313700206d7367313800206d7367313900206d736732300000001e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"

    result = encode_decode_structure(operation, structure_name, hex_payload)
    print(result)

    d = element_to_dict(ET.fromstring(result))
    print(d)


